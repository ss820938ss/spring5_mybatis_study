<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="spring5_mybatis_study.mapper.CourseMapper">

	<resultMap type="Course" id="ResCourse">
		<id property="courseId" column="course_id"/>
		<result property="name" column="name"/>
        <result property="description" column="description"/>
        <result property="startDate" column="start_date"/>
        <result property="endDate" column="end_date"/>
	</resultMap>

	<sql id="selectSQL">
		SELECT course_id, name, description, start_date, end_date, tutor_id  
		  FROM courses
	</sql>
	
	<sql id="whereSql">
	    <where>
	        <if test="tutorId != null">
	            AND tutor_id = #{tutorId}
	        </if>
	        <if test="courseName != null">
	            AND name like #{courseName}
	        </if>
	        <if test="startDate != null">
	            AND start_date &gt;= #{startDate}
	        </if>
	        <if test="endDate != null">
	            AND end_date &lt;= #{endDate}
	        </if>
	    </where>
	</sql>
	
	
	<select id="selectCoursesByCondition" parameterType="map" resultMap="ResCourse">
		select course_id, name, description, start_date, end_date, tutor_id  
		  from courses
		<where>
	        <if test="tutorId != null">
	            <![CDATA[ AND tutor_id = #{tutorId} ]]>
	        </if>
	        <if test="courseName != null">
	            <![CDATA[ AND name like #{courseName} ]]>
	        </if>
	        <if test="startDate != null">
	            <![CDATA[ AND start_date >= #{startDate} ]]>
	        </if>
	        <if test="endDate != null">
	            <![CDATA[ AND end_date <= #{endDate} ]]>
	        </if>
		</where>
	</select>
	
	<!-- 동적SQL - choose 조건 --> 
	<select id="selectCaseCourses" parameterType="map" resultType="Course">
		SELECT course_id, name, description, start_date, end_date, tutor_id  
		  FROM courses
	    <choose>
	        <when test="searchBy=='Tutor'">
	            WHERE tutor_id=#{tutorId}
	        </when>
	        <when test="searchBy=='CourseName'">
	            WHERE name like #{courseName}
	        </when>
	        <otherwise>
	            WHERE end_date &gt;=now()
	        </otherwise>
	    </choose>
	
	</select>
	
	<!-- 동적SQL - where 조건 -->
	<sql id="whereSqlCDATA">
	    <where>
	        <if test="tutorId != null"> 
	            <![CDATA[ AND tutor_id = #{tutorId}      ]]>
	        </if>
	        
	        <if test="courseName != null">
	            <![CDATA[ AND name like #{courseName}    ]]>
	        </if>
	        
	        <if test="startDate != null"> 
	            <![CDATA[ AND start_date >= #{startDate} ]]>
	        </if>
	        
	        <if test="endDate != null">   
	            <![CDATA[ AND end_date <= #{endDate}     ]]>
	        </if>
	    </where>
	</sql>
	
	<select id="selectWhereCourses" parameterType="map" resultType="Course">
	    <include refid="selectSQL" />
	    <include refid="whereSqlCDATA" />
	</select>
	
	<!-- 동적SQL - trim 조건 -->
	<select id="selectTrimCourses" parameterType="map" resultType="Course">
	    <include refid="selectSQL" />
	    <trim prefix="WHERE" prefixOverrides="AND|OR">
	        <!-- 아래 tutordId != null 조건이 참이면 앞부분에 where 자동 추가 -->
	        <if test="tutorId != null">
	            tutor_id=#{tutorId}
	        </if>
	        <!-- 만약 where가 추가 된 경우 and 절 추가, where 존재하지 않는 경우 where 추가하고 and 제거 -->
	        <if test="courseName != null">
	            and name like #{courseName} 
	        </if>
	    </trim>
	</select>
	
	<!-- 동적SQL - foreach 루프 -->
	<select id="selectCoursesForeachByTutors" parameterType="map" resultType="Course">
	    <include refid="selectSQL"/>
	    <if test="tutorIds != null">
	        <where>
	            tutor_id IN
	            <foreach item="tutorId" collection="tutorIds" open="(" close=")" separator=",">
	                    #{tutorId}
	            </foreach>
	        </where>
	    </if>
	</select>
	
	<insert id="insertCourses" parameterType="map">
	   insert into courses(course_id, name, description, start_date, end_date, tutor_id) values 
	   <foreach item="item" collection="tutors" separator=" ," >
	      (#{item.courseId}, #{item.name}, #{item.description}, #{item.startDate}, #{item.endDate}, #{item.tutorId})
	   </foreach>
	</insert>
		
	<delete id="deleteCourses" parameterType="map">
		delete from courses
		<where>
		    course_id IN
		    <foreach item="courseId" collection="courseIds" open="(" close=")" separator=",">
		            #{courseId}
		    </foreach>
		</where>
	</delete>
		
	<update id="updateCourse" parameterType="Course">
		update courses
		<set>
			<if test="name neq null">name=#{name},</if>
			<if test="description neq null">description=#{description},</if>
			<if test="startDate neq null">start_date=#{startDate},</if>
			<if test="endDate neq null">end_date=#{endDate},</if>
			<if test="tutorId gt 1">tutor_id=#{tutorId},</if>
		</set>
		 where course_id = #{courseId}
	</update>
	
	<!-- transaction -->
	<select id="selectCourseById" resultType="Course">
		SELECT course_id, name, description, start_date, end_date, tutor_id  
		  FROM courses
		 WHERE course_id = #{courseId}
	</select>
	
	<insert id="insertCourse" parameterType="Course">
	    INSERT INTO COURSES(COURSE_ID, NAME, DESCRIPTION, START_DATE, END_DATE, TUTOR_ID) 
	    VALUES (#{courseId}, #{name},#{description},#{startDate},#{endDate},#{tutorId}) 
	</insert>
	
	<delete id="deleteCourse" >
	    DELETE 
	      FROM COURSES
	     WHERE COURSE_ID=#{courseId}
	</delete>
	
</mapper>
















